---
- name: stop and disable the {{ podman_webserver }}.service
  systemd:
    name: "{{ podman_webserver }}.service"
    enabled: no
    state: stopped
  when: container_running|bool

- name: check status of container
  include: check_status.yml

- name: remove systemd service for {{ podman_webserver }}a
  block:
    - name: check for the {{ podman_webserver }}.service file
      stat:
        path: "{{ podman_webserver }}"
      register: systemd_file
    
    - name: remove the {{ podman_webserver }}.service file
      file:
        path: "/etc/systemd/system/{{ podman_webserver }}.service"
        state: absent
      register: remove_service
    
    - name: reload and reset systemd 
      shell: >
        systemctl daemon-reload
        systemctl reset-failed
      ignore_errors: yes
      when: remove_service.changed

    #- name: remove the directory {{ webserver_directory }}
    #  file:
    #    path: "{{ webserver_directory }}"
    #    state: absent
    #
    #- name: ensure the webserver cotainer image is removed
    #  command: podman rmi {{ podman_webserver_image.stdout }}
    #  ignore_errors: yes
    #  when: podman_webserver_image is defined and podman_webserver_image.stdout != ''
  when: not container_running|bool

- name: get container {{ podman_webserver }} uuid
  shell: podman ps -a | awk '/{{ podman_webserver }}/ {print $1}'
  register: container_uuid
  ignore_errors: yes

- name: ensure the {{ podman_webserver }} container is removed
  command: podman container rm --force --volumes {{ container_uuid.stdout }}
  ignore_errors: yes
  register: remove_container_result
  when: container_exist|bool

- name: check status of container
  include: check_status.yml

- fail:
    msg: "Unable to delete {{ podman_webserver }} please remove it before re-running"
  when: container_exist|bool
